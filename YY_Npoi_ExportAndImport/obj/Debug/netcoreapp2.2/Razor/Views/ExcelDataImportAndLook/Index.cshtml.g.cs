#pragma checksum "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7cf14e9537682533375207fe3d381ce2f27df5c9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ExcelDataImportAndLook_Index), @"mvc.1.0.view", @"/Views/ExcelDataImportAndLook/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ExcelDataImportAndLook/Index.cshtml", typeof(AspNetCore.Views_ExcelDataImportAndLook_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\_ViewImports.cshtml"
using YY_Npoi_ExportAndImport;

#line default
#line hidden
#line 2 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\_ViewImports.cshtml"
using YY_Npoi_ExportAndImport.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7cf14e9537682533375207fe3d381ce2f27df5c9", @"/Views/ExcelDataImportAndLook/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8dfb9e8767d20959017fa2b1452dac1408c993c", @"/Views/_ViewImports.cshtml")]
    public class Views_ExcelDataImportAndLook_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
  
    ViewData["Title"] = "数据展示";

#line default
#line hidden
            BeginContext(40, 183, true);
            WriteLiteral("<div class=\"layui-header header header-doc\" spring>\r\n    <div class=\"layui-main\">\r\n        <ul class=\"layui-nav\" id=\"nav\">\r\n            <li class=\"layui-nav-item\">\r\n                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 223, "\"", 257, 1);
#line 8 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
WriteAttributeValue("", 230, Url.Action("Index","Home"), 230, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(258, 129, true);
            WriteLiteral(" style=\"text-decoration:none;\">使用NPOI导出Word文档</a>\r\n            </li>\r\n            <li class=\"layui-nav-item\">\r\n                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 387, "\"", 441, 1);
#line 11 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
WriteAttributeValue("", 394, Url.Action("ExportExcelData","ExcelOperation"), 394, 47, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(442, 141, true);
            WriteLiteral(" style=\"text-decoration:none;\">使用NPOI导出Excel文档</a>\r\n            </li>\r\n            <li class=\"layui-nav-item layui-this\">\r\n                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 583, "\"", 635, 1);
#line 14 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
WriteAttributeValue("", 590, Url.Action("Index","ExcelDataImportAndLook"), 590, 45, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(636, 1142, true);
            WriteLiteral(@" style=""text-decoration:none;"">将Excel文档数据数据批量导入到MySQL中</a>
            </li>
        </ul>
    </div>
</div>
<div style=""height: 20px;""></div>
    <div class=""layui-fluid"">
        <div class=""layui-row layui-col-space15"">
            <div class=""layui-col-md12"">
                <div class=""layui-card"">
                    <div class=""layui-card-header"">
                        <button class=""layui-btn layui-btn-sm"" onclick=""Import()"">数据导入</button>
                        <button class=""layui-btn layui-btn-sm layui-btn-danger"" onclick=""DataExport()"">数据导出</button>
                        <button class=""layui-btn layui-btn-sm layui-btn-danger"" onclick=""Download()"">导入模板下载</button>
                    </div>

                    <div class=""layui-card-body"">
                        <table class=""layui-hide"" id=""test-table-resetPage""></table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        //数据导出
        function DataExp");
            WriteLiteral("ort() {\r\n            $.ajax({\r\n                async: true,\r\n                datatype: \'json\',\r\n                url: \'");
            EndContext();
            BeginContext(1779, 27, false);
#line 44 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
                 Write(Url.Action("Export","Home"));

#line default
#line hidden
            EndContext();
            BeginContext(1806, 834, true);
            WriteLiteral(@"',
                type: ""post"",
                success: function(data) {
                    if (data.code == 1) {
                        layer.msg(""导出成功"");
                        //下载
                        window.location.href = data.msg;
                    } else {
                        layer.msg(data.msg);
                    }
                }
            });
        }

        //模板下载
        function Download()
        {
            window.location.href=""/Content/ExcelFiles/Template.xlsx"";
        }

        function Import() {
            layer.open({
                type: 2,
                title: '数据导入',
                shadeClose: true,
                shade: false,
                maxmin: false, //开启最大化最小化按钮
                area: ['525px', '270px'],
                content: '");
            EndContext();
            BeginContext(2641, 49, false);
#line 72 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
                     Write(Url.Action("UserImport","ExcelDataImportAndLook"));

#line default
#line hidden
            EndContext();
            BeginContext(2690, 285, true);
            WriteLiteral(@"'
            });
        }

        function Export() {

        }

        //layui—table表格渲染和数据绑定
        layui.use('table', function () {
            var table = layui.table;
            table.render({
               elem: '#test-table-resetPage'
              , url: '");
            EndContext();
            BeginContext(2976, 50, false);
#line 85 "E:\A-我的Github开源项目\ASP.NET Core NPOI使用超集\NPOI-ExportWordAndExcel-ImportExcelData\YY_Npoi_ExportAndImport\Views\ExcelDataImportAndLook\Index.cshtml"
                 Write(Url.Action("GetUserInfo","ExcelDataImportAndLook"));

#line default
#line hidden
            EndContext();
            BeginContext(3026, 614, true);
            WriteLiteral(@"'
              , loading: true
              , height: 405 //容器高度
              , limit:15
              , limits:[15, 30, 60, 90]
             , cols: [[
          { field: 'Id', width: 180, title: '用户编号', sort: true }
        , { field: 'UserName', width:180, title: '用户名' }
        , { field: 'Sex', width: 180, title: '性别'}
        , { field: 'Phone', width: 280, title: '手机号' }
        , { field: 'Description', width: 280, title: '个人介绍' }
        , { field: 'Hobby', title: '爱好', minWidth: 150,width:280}
             ]]
              , page: true
            });
        });
    </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
